{"version":3,"file":"static/js/471.7e4baeb6.chunk.js","mappings":"gQAwCMA,EAAO,SAAHC,GAAgB,IAAXC,EAAID,EAAJC,KACJC,EAAkDD,EAAlDC,UAAWC,EAAuCF,EAAvCE,MAAOC,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,UAAWC,EAAeL,EAAfK,KAAMC,EAASN,EAATM,MAChD,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACHE,EAAAA,EAAAA,KAAA,QACIC,KAAK,cACLC,QAAO,GAAAC,OAAKZ,EAAK,mBAErBS,EAAAA,EAAAA,KAAA,SAAAF,SAAQP,QAEZS,EAAAA,EAAAA,KAAA,OAAKI,IAAKd,EAAWe,IAAI,QAAQR,UAAU,uBAC3CD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,qBAAoBC,SAAEP,KACpCS,EAAAA,EAAAA,KAAA,KAAGH,UAAU,sBAAqBC,SAC7BN,KAELQ,EAAAA,EAAAA,KAAA,KAAGH,UAAU,sBAAqBC,SAAEL,KACpCG,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sBAAqBC,SAAA,CAAC,aAAWJ,MAC9CE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,CAAEH,EAAM,WAEhDK,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,UAAWV,UAAU,qBAAoBC,SAAC,kBAGhE,EAEA,EAxDwB,WACpB,IAAOU,GAAYC,EAAAA,EAAAA,MAAZD,SAEPE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAEpCI,GAA2DC,EAAAA,EAAAA,KAApDC,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAUJ,EAAVI,WAAYC,EAAeL,EAAfK,iBAExCC,EAAAA,EAAAA,YAAU,WACNC,EAAmBf,EACvB,GAAG,CAACA,IAEJ,IAAMe,EAAqB,SAACC,GACxBJ,IACAC,EAAgBG,GACXC,KAAKC,GACLD,MAAK,kBAAMN,EAAW,YAAY,GAC3C,EAEMO,EAAuB,SAACC,GAC1BZ,EAAgBY,EACpB,EAEA,OACI/B,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAA9B,SAAA,EACIE,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,KACTC,EAAAA,EAAAA,GAAWZ,EAAS/B,EAAM2B,KAGvC,C","sources":["components/pages/SingleComicsPage.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport \"./SingleComicsPage.scss\";\r\nimport {useParams, Link} from \"react-router-dom\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport setContent from \"../../utils/setContent\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicsId} = useParams()\r\n\r\n    const [singleComics, setSingleComics] = useState(null)\r\n\r\n    const {process, setProcess, clearError, getSingleComics} = useMarvelService()\r\n\r\n    useEffect(() => {\r\n        updateSingleComics(comicsId)\r\n    }, [comicsId])\r\n\r\n    const updateSingleComics = (id) => {\r\n        clearError()\r\n        getSingleComics(id)\r\n            .then(onSingleComicsLoaded)\r\n            .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n    const onSingleComicsLoaded = (res) => {\r\n        setSingleComics(res)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {setContent(process, View, singleComics)}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({data}) => {\r\n    const {thumbnail, title, text, pageCount, lang, price} = data\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`${title} comics book`}\r\n                />\r\n                <title>{title}</title>\r\n            </Helmet>\r\n            <img src={thumbnail} alt=\"x-men\" className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">\r\n                    {text}\r\n                </p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {lang}</p>\r\n                <div className=\"single-comic__price\">{price}$</div>\r\n            </div>\r\n            <Link to={'/comics'} className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"],"names":["View","_ref","data","thumbnail","title","text","pageCount","lang","price","_jsxs","className","children","Helmet","_jsx","name","content","concat","src","alt","Link","to","comicsId","useParams","_useState","useState","_useState2","_slicedToArray","singleComics","setSingleComics","_useMarvelService","useMarvelService","process","setProcess","clearError","getSingleComics","useEffect","updateSingleComics","id","then","onSingleComicsLoaded","res","_Fragment","AppBanner","setContent"],"sourceRoot":""}