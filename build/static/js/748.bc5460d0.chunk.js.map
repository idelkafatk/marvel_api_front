{"version":3,"file":"static/js/748.bc5460d0.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './comicsList.scss';\nimport React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>\n            break\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>\n            break\n        case 'confirmed':\n            return <Component/>\n            break\n        case 'error':\n            return <ErrorMessage/>\n            break\n        default:\n            throw new Error('Unexpected process state')\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comics, setComics] = useState([])\n    const [offset, setOffset] = useState(8)\n    const [newItemLoading, setNewItemLoading] = useState(false)\n    const [comicsEnded, setComicsEnded] = useState(false)\n\n    const {getAllComics, clearError, process, setProcess} = useMarvelService()\n\n    useEffect(() => {\n        updateComics()\n    }, [])\n\n    const updateComics = () => {\n        clearError()\n\n        getAllComics()\n            .then(onComicsLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsLoaded = (res) => {\n        let ended= res.length < 8\n\n        setComics(chars => [...chars, ...res])\n        setNewItemLoading(false)\n        setOffset(offset => offset + 8)\n        setComicsEnded(ended)\n    }\n\n    const onRequest = (offset) => {\n        setNewItemLoading(true)\n\n        getAllComics(offset)\n            .then(onComicsLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const comicsList = () => {\n\n        const comicsItems = comics.map((item, i) => {\n            return (\n                <CSSTransition key={i} timeout={500} classNames={'comics__item'}>\n                    <li key={i} className=\"comics__item\">\n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                            <div className=\"comics__item-name\">{item.title}</div>\n                            <div className=\"comics__item-price\">{item.price}$</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {comicsItems}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => comicsList(), newItemLoading)}\n            <button className=\"button button__main button__long\"\n                    onClick={() => onRequest(offset)}\n                    disabled={newItemLoading}\n                    style={{display: comicsEnded ? 'none' : 'block'}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of out comics\"\r\n                />\r\n                <title>Comics Page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","_useState","useState","_useState2","_slicedToArray","comics","setComics","_useState3","_useState4","offset","setOffset","_useState5","_useState6","setNewItemLoading","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","clearError","setProcess","useEffect","updateComics","then","onComicsLoaded","res","ended","length","chars","concat","_toConsumableArray","_jsxs","className","children","comicsItems","map","item","i","CSSTransition","timeout","classNames","Link","to","id","src","thumbnail","alt","title","price","TransitionGroup","component","comicsList","onClick","onRequest","disabled","style","display","_Fragment","Helmet","name","content","AppBanner","ComicsList"],"sourceRoot":""}